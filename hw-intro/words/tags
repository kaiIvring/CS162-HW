!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FIELD_DESCRIPTION!C++	name	/aliased names/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!C	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C	m,member	/struct, and union members/
!_TAG_KIND_DESCRIPTION!C	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!C++	M,module	/modules/
!_TAG_KIND_DESCRIPTION!C++	P,partition	/partitions/
!_TAG_KIND_DESCRIPTION!C++	c,class	/classes/
!_TAG_KIND_DESCRIPTION!C++	d,macro	/macro definitions/
!_TAG_KIND_DESCRIPTION!C++	e,enumerator	/enumerators (values inside an enumeration)/
!_TAG_KIND_DESCRIPTION!C++	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!C++	g,enum	/enumeration names/
!_TAG_KIND_DESCRIPTION!C++	h,header	/included header files/
!_TAG_KIND_DESCRIPTION!C++	m,member	/class, struct, and union members/
!_TAG_KIND_DESCRIPTION!C++	n,namespace	/namespaces/
!_TAG_KIND_DESCRIPTION!C++	s,struct	/structure names/
!_TAG_KIND_DESCRIPTION!C++	t,typedef	/typedefs/
!_TAG_KIND_DESCRIPTION!C++	u,union	/union names/
!_TAG_KIND_DESCRIPTION!C++	v,variable	/variable definitions/
!_TAG_KIND_DESCRIPTION!Make	I,makefile	/makefiles/
!_TAG_KIND_DESCRIPTION!Make	m,macro	/macros/
!_TAG_KIND_DESCRIPTION!Make	t,target	/targets/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!C	1.1	/current.age/
!_TAG_PARSER_VERSION!C++	1.1	/current.age/
!_TAG_PARSER_VERSION!Make	1.1	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/workspace/code/personal/hw-intro/words/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.1.0	/d7b87f476/
!_TAG_ROLE_DESCRIPTION!C!function	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C!struct	foreigndecl	/declared in foreign languages/
!_TAG_ROLE_DESCRIPTION!C++!header	exported	/exported with "exported imported ..."/
!_TAG_ROLE_DESCRIPTION!C++!header	imported	/imported with "imported ..."/
!_TAG_ROLE_DESCRIPTION!C++!header	local	/local header/
!_TAG_ROLE_DESCRIPTION!C++!header	system	/system header/
!_TAG_ROLE_DESCRIPTION!C++!macro	undef	/undefined/
!_TAG_ROLE_DESCRIPTION!C++!module	imported	/imported with "imported ..."/
!_TAG_ROLE_DESCRIPTION!C++!module	partOwner	/used for specifying a partition/
!_TAG_ROLE_DESCRIPTION!C++!partition	imported	/imported with "imported ..."/
!_TAG_ROLE_DESCRIPTION!Make!makefile	included	/included/
!_TAG_ROLE_DESCRIPTION!Make!makefile	optional	/optionally included/
%	Makefile	/^%: %.c$/;"	t
.DEFAULT_GOAL	Makefile	/^.DEFAULT_GOAL := default$/;"	m
BINARIES	Makefile	/^BINARIES=words$/;"	m
CC	Makefile	/^CC?=gcc$/;"	m
CFLAGS	Makefile	/^CFLAGS?=-Wall -Werror -g3$/;"	m
LIBRARIES	Makefile	/^	LIBRARIES:=wc_sort_arm.o$/;"	m
LIBRARIES	Makefile	/^LIBRARIES=wc_sort.o$/;"	m
MAX_WORD_LEN	main.c	/^#define MAX_WORD_LEN /;"	d	file:
SOURCES	Makefile	/^SOURCES=main.c word_count.c$/;"	m
UNAME	Makefile	/^UNAME := $(shell uname -m)$/;"	m
WordCount	word_count.h	/^typedef struct word_count WordCount;$/;"	t	typeref:struct:word_count
add_word	word_count.c	/^int add_word(WordCount **wclist, char *word) {$/;"	f	typeref:typename:int
clean	Makefile	/^clean:$/;"	t
count	word_count.h	/^    int count;$/;"	m	struct:word_count	typeref:typename:int
count_words	main.c	/^int count_words(WordCount **wclist, FILE *infile) {$/;"	f	typeref:typename:int
default	Makefile	/^default: executable$/;"	t
display_help	main.c	/^static int display_help(void) {$/;"	f	typeref:typename:int	file:
executable	Makefile	/^executable:$/;"	t
find_word	word_count.c	/^WordCount *find_word(WordCount *wchead, char *word) {$/;"	f	typeref:typename:WordCount *
fprint_words	word_count.c	/^void fprint_words(WordCount *wchead, FILE *ofile) {$/;"	f	typeref:typename:void
init_words	word_count.c	/^int init_words(WordCount **wclist) {$/;"	f	typeref:typename:int
len_words	word_count.c	/^ssize_t len_words(WordCount *wchead) {$/;"	f	typeref:typename:ssize_t
main	main.c	/^int main (int argc, char *argv[]) {$/;"	f	typeref:typename:int
new_string	word_count.c	/^char *new_string(char *str) {$/;"	f	typeref:typename:char *
next	word_count.h	/^    struct word_count *next;$/;"	m	struct:word_count	typeref:struct:word_count *
num_words	main.c	/^int num_words(FILE* infile) {$/;"	f	typeref:typename:int
word	word_count.h	/^    char *word;$/;"	m	struct:word_count	typeref:typename:char *
word_count	word_count.h	/^struct word_count {$/;"	s
word_count_h	word_count.h	/^#define word_count_h$/;"	d
word_counts	main.c	/^WordCount *word_counts = NULL;$/;"	v	typeref:typename:WordCount *
wordcount_less	main.c	/^static bool wordcount_less(const WordCount *wc1, const WordCount *wc2) {$/;"	f	typeref:typename:bool	file:
